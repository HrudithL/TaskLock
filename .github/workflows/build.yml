name: Build iOS App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Cache DerivedData
      uses: actions/cache@v3
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-deriveddata-${{ hashFiles('**/*.xcodeproj') }}
        restore-keys: |
          ${{ runner.os }}-deriveddata-
          
    - name: List project files
      run: |
        echo "Project structure:"
        find . -name "*.xcodeproj" -o -name "*.swift" -o -name "*.plist" | head -20
        
    - name: Build for Simulator (No Code Signing)
      run: |
        # Build for iOS Simulator first to test compilation
        xcodebuild -project TaskLock.xcodeproj \
                   -scheme TaskLock \
                   -configuration Debug \
                   -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
                   -derivedDataPath ./DerivedData \
                   build
                   
    - name: Build for Device (No Code Signing)
      run: |
        # Build for device without code signing
        xcodebuild -project TaskLock.xcodeproj \
                   -scheme TaskLock \
                   -configuration Release \
                   -destination 'generic/platform=iOS' \
                   -derivedDataPath ./DerivedData \
                   CODE_SIGNING_ALLOWED=NO \
                   build
                   
    - name: Create IPA (No Code Signing)
      run: |
        # Create IPA without code signing for testing
        mkdir -p ./build
        
        # Find the built app
        APP_PATH=$(find ./DerivedData -name "*.app" -type d | head -1)
        
        if [ -z "$APP_PATH" ]; then
          echo "No .app file found"
          find ./DerivedData -type d -name "*.app"
          exit 1
        fi
        
        echo "Found app at: $APP_PATH"
        
        # Create IPA
        cd "$(dirname "$APP_PATH")"
        zip -r ../../build/TaskLock-unsigned.ipa "$(basename "$APP_PATH")"
        cd ../../
        
        echo "Created unsigned IPA at: ./build/TaskLock-unsigned.ipa"
        ls -la ./build/
                   
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: TaskLock-unsigned-build
        path: |
          ./build/
          ./DerivedData/Build/Products/Release-iphoneos/
        retention-days: 30
        
    - name: Upload to GitHub Releases
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        files: ./build/TaskLock-unsigned.ipa
        tag_name: v${{ github.run_number }}
        name: TaskLock v${{ github.run_number }} (Unsigned)
        body: |
          ## TaskLock iOS App Build (Unsigned)
          
          This is an automated build of the TaskLock iOS app without code signing.
          
          ### Installation Instructions
          1. Download the unsigned IPA file
          2. Sign it with your own certificate using tools like:
             - AltStore
             - Sideloadly
             - Xcode (for development)
          3. Install on your device
          
          ### Features
          - Task management with due dates and priorities
          - Task-conditional app blocking
          - Analytics and productivity insights
          - NFC/QR emergency unlock
          
          **Note**: This app requires iOS 17+ and Family Controls capability.
          **Warning**: This is an unsigned build for development/testing only.
        draft: false
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
